# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: E2E and build testing.

on:
  pull_request:
    branches: [develop, master]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - run: echo ${{ github.head_ref }}
      - run: echo "::set-env name=TAGS_JSON::$(curl -sb -H https://registry.hub.docker.com/v1/repositories/dmsc/duo-backend/tags)"
      - run: echo "TAGS_JSON $TAGS_JSON"
      - run: echo "::set-env name=TAG_COUNT::$(echo $TAGS_JSON | jq -c '.[] | select(.name=="${{ github.head_ref }}")' | jq -s '. | length')"
      - run: echo "TAG_COUNT $TAG_COUNT"
      - run: if [ "$TAG_COUNT" != 0 ]; then    echo "::set-env name=TAG::${{ github.head_ref }}"; else    echo "::set-env name=TAG::develop"; fi
      - run: echo "TAG $TAG"
      - run: rm -rf user-office-backend
      - run: git clone https://github.com/UserOfficeProject/user-office-backend
      - run: cd user-office-backend && git fetch && git checkout $TAG && cd ..
      - run: docker-compose -f docker-compose.e2e.yaml rm
      - run: docker-compose -f docker-compose.e2e.yaml down --remove-orphans
      - run: docker-compose -f docker-compose.e2e.yaml pull
      - run: docker-compose -f docker-compose.e2e.yaml build --no-cache
      - run: docker-compose -f docker-compose.e2e.yaml up --exit-code-from cypress
      - run: docker-compose -f docker-compose.e2e.yaml down
    env:
      SVC_ACC_TOKEN: ${{ secrets.SVC_ACC_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          push: false
