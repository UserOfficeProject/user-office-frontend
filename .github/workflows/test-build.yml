# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: E2E and build testing.

on:
  pull_request:
    branches: [ develop, master ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  e2e:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - uses: actions/checkout@v2
    - run: echo ${{ github.head_ref }}
    - run: echo "::set-env name=TAGS_JSON::$(curl -sb -H https://registry.hub.docker.com/v1/repositories/dmsc/duo-backend/tags)"
    - run: echo "TAGS_JSON $TAGS_JSON"
    - run: echo "::set-env name=TAG_COUNT::$(echo $TAGS_JSON | jq --arg \"GITHUB_REF_NAME_SLUG\" '${{ github.head_ref }}' -c '.[] | select(.name==$GITHUB_REF_NAME_SLUG)' | jq -s '. | length')"
    - run: echo "TAG_COUNT $TAG_COUNT"
    - run: if [ "$TAG_COUNT" != 0 ]; then    echo "::set-env name=TAG::${{ github.head_ref }}"; else    echo "::set-env name=TAG::latest"; fi
    - run: echo "TAG $TAG"
    - run: rm -rf duo-backend
    - run: git clone https://gitlab.esss.lu.se/swap/duo-backend.git
    - run: docker-compose -f docker-compose.e2e.yaml rm
    - run: docker-compose -f docker-compose.e2e.yaml down --remove-orphans
    - run: docker-compose -f docker-compose.e2e.yaml pull
    - run: docker-compose -f docker-compose.e2e.yaml build
    - run: docker-compose -f docker-compose.e2e.yaml up --exit-code-from cypress
    - run: docker-compose -f docker-compose.e2e.yaml down
    env:
      SVC_ACC_TOKEN: ${{ secrets.SVC_ACC_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: e2e
    steps:
    - uses: actions/checkout@v2
    - uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        push: false
