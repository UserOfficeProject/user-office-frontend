# Use postgres/example user/password credentials
version: '3.1'

services:
  proxy:
    image: traefik:1.7 # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - '80:80' # The HTTP port
      - '8080:8080' # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    build:
      context: ./
      dockerfile: './cypress/Dockerfile.psql'
    restart: always
    environment:
      POSTGRES_PASSWORD: duopassword
      POSTGRES_USER: duouser
      POSTGRES_DB: duo
  backend:
    image: dmsc/duo-backend:$TAG
    environment:
      DATABASE_URL: postgres://duouser:duopassword@db:5432/duo
      secret: qMyLZALzs229ybdQXNyzYRdju7X784TH
      tokenLife: 7d
      baseURL: localhost:3000
      SPARKPOST_TOKEN: dummytoken
      NODE_ENV: development
    labels:
      - 'traefik.frontend.rule=PathPrefix:/api, /graphql, /downloads, /files, /proposal, /uploads'
      - 'traefik.port=4000'
    depends_on:
      - db
  frontend:
    build:
      context: ./
      dockerfile: './Dockerfile'
    labels:
      - 'traefik.frontend.rule=PathPrefix:/'
      - 'traefik.port=80'
    depends_on:
      - backend
  cypress:
    environment:
      CYPRESS_SVC_ACC_TOKEN: $SVC_ACC_TOKEN
    ipc: host
    build: ./cypress
    command: ['./wait-for-frontend.sh', 'frontend:80', 'cypress run']
    depends_on:
      - frontend
